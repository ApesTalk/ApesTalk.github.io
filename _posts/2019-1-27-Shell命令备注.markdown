---
layout: post
title: Shell命令备注
date: 2019-1-27 17:57:00.000000000
tags: shell echo chmod
---


![](https://apestalk.github.io/assets/BlogImages/shell.png)



## chmod命令（chmod 755到底是个什么鬼？）

Linux/Unix 的文件调用权限分为三级 : 文件拥有者、群组、其他。利用 chmod 可以藉以控制文件如何被他人所调用。
每个文件的权限呢，又分为读、写和执行。所以，可以用三位二进制来标识权限，当对应二进制位为0时表示没有对应的权限，当对应二进制位为1时表示有对应的权限。比如110，就表时可读可写不可执行。

那么对应三个用户分组，就需要三组这样的三位二进制来标识权限了。比如111 101 101（rwxr-xr-x），分别（每三位）表示User、Group、及Other的权限。

对应的，r=4，w=2，x=1
若要rwx属性则4+2+1=7；
若要rw-属性则4+2=6；
若要r-x属性则4+1=5。

所以755就是11110101（rwxr-xr-x）也就是说文件拥有者有读写和执行的权限，群组和其他用户拥有读和执行的权限。


## Shell命令实现各种进制转换

在终端中可以通过printf和echo命令加上表达式即可轻松实现各种进制数之间的互转。我们知道，八进制用o标识，十进制用d标识，十六进制用x标识。

公式1：``printf %<目标进制标识> $((原进制标识#原进制数))   `` 
公式2：``echo "obase=目标进制;$((原进制#原进制数))”|bc  `` 实际上只需掌握这个公式即可！

二进制转十进制：``printf %d $((2#1111))  ``           或`` echo "obase=10;$((2#1111))"|bc     `` 
十进制转二进制：``echo "obase=2;15"|bc `` 或 ``echo "obase=2;$((10#15))"|bc``

二进制转八进制：``printf %o $((2#1111)) ``  或   ``echo "obase=8;$((2#1111))"|bc``
八进制转二进制：``echo "obase=2;$((8#17))"|bc``

二进制转十六进制：``printf %x $((2#1111)) `` 或  ``echo "obase=16;$((2#1111))"|bc``
十六进制转二进制：``echo "obase=2;$((16#F))"|bc``

八进制转十进制：``printf %d $((8#17))  ``或 `` echo "obase=10;$((8#17))"|bc``
十进制转八进制：``echo "obase=8;$((15))"|bc``

十六进制转十进制：``printf %d 0xF 或 echo $((16#F)) `` 或 ``echo "obase=10;$((16#F))"|bc``
十进制转十六进制：``printf %x 15 ``或 ``echo "obase=16;15"|bc``

八进制转十六进制：``printf %x $((8#17))  ``或 ``echo "obase=16;$((8#17))"|bc``
十六进制转八进制：``echo "obase=8;$((16#F))"|bc``





![欢迎关注支持](https://apestalk.github.io/assets/BlogImages/wx.jpeg)
<center>感谢关注支持</center>

